namespace Samples
{
    #region

    using System;
    using System.IO;
    using System.Threading;

    using NUnit.Framework;

    using OpenQA.Selenium;
    using OpenQA.Selenium.Remote;

    #endregion

    [TestFixture]
    public class AutoSuggestSample
    {
        #region Fields

        private WpDriver driver;

        #endregion

        #region Public Methods and Operators

        [TearDown]
        public void CleanUp()
        {
            this.driver.Quit();
        }

        [SetUp]
        public void Initialize()
        {
            var capabillities = new DesiredCapabilities();

            var basePath = Directory.GetCurrentDirectory();
            const string FilePath =
                "..\\..\\..\\..\\TestApp\\TestApp.WindowsPhone\\AppPackages\\TestApp.WindowsPhone_1.0.0.0_AnyCPU_Debug_Test\\TestApp.WindowsPhone_1.0.0.0_AnyCPU_Debug.appx";
            var autPath = Path.GetFullPath(Path.Combine(basePath, FilePath));

            capabillities.SetCapability("app", autPath);

            this.driver = new WpDriver(new Uri("http://localhost:9999"), capabillities);
        }

        [Test]
        public void TestAutoSuggest()
        {
            this.driver.ExecuteScript("mobile: OnScreenKeyboard.Disable");

            // Go to the second pivot page
            var pivots = this.driver.FindElementsByClassName("Windows.UI.Xaml.Controls.Primitives.PivotHeaderItem");
            pivots[1].Click();
            Thread.Sleep(500);

            // Find AutoSuggestBox element
            var autoSuggestBox = this.driver.FindElementById("MySuggestBox");

            // Find TextBox inside AutoSuggestBox so that we can input some text
            var autoSuggestInput = autoSuggestBox.FindElement(By.ClassName("Windows.UI.Xaml.Controls.TextBox"));

            // Input some text so that suggests list would appear
            autoSuggestInput.SendKeys("A");

            // Wait for animations, don't use Sleep in real tests, use WebDriverWait
            Thread.Sleep(500);

            // Find SuggestionsList, it is generated by framework and has no distinct id, name or class
            // so we have to find it by x:Name and it is not very pretty in C# Selenium bindings as we have to use reflection inside
            var suggestionsList = this.driver.FindByXName("SuggestionsList");

            // suggestionsList contain one ListViewItem per suggestion, each containing two TextBlocks (suggestion valye and some palceholder)
            var suggestions = suggestionsList.FindElements(By.ClassName("Windows.UI.Xaml.Controls.TextBlock"));

            const string Expected = "A2";

            // Lets find suggestion that we want
            foreach (var suggest in suggestions)
            {
                if (!suggest.Text.Equals("A2"))
                {
                    continue;
                }

                suggest.Click();

                break;
            }

            // Lets check that we actually selected correct suggestion
            Assert.AreEqual(autoSuggestInput.Text, Expected);
        }

        #endregion
    }
}
